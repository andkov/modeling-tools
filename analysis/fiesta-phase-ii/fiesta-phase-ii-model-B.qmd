---
title: "FIESTA Phase II"
subtitle: "Multiple time points, Fixed Effects"
author: "Research and Open Data"
format:
  html:
    page-layout: full
    toc: true
    toc-location: right
    code-fold: show
    theme: simplex
    highlight-style: github
    colde-line-numbers: true
    css: styles.css
    embed-resources: true 
editor: visual
editor_options: 
  chunk_output_type: console
---

This report presents the results of the Phase II of the FIESTA project. 

```{r}
#| label: set_options
#| code-summary: report-wide formatting options
#| echo: false
#| results: hide
#| message: false 
cat("Working directory: ", getwd()) # turn on to test the location
report_render_start_time <- Sys.time()
# set options shared by all chunks
knitr::opts_chunk$set(
  results      = 'show',
  message      = FALSE,
  warning      = FALSE,
  comment      = NA,
  tidy         = FALSE,
  # dpi        = 400, # dots per inch,
  # out.width  = "650px", # pixels, this affects only the markdown, not the underlying png file.  The height will be scaled appropriately.
  fig.width    = 9, # inches
  fig.height   = 6, # inches
  fig.path     = 'figure-png-iso/' # where figures are stored
)
echo_chunks    <- FALSE #Toggle for debugging.
message_chunks <- FALSE #Toggle for debugging.
options(width=100) # number of characters to display in the output (dflt = 80)
ggplot2::theme_set(ggplot2::theme_bw()) # common theme for all graphs
```

# Environment

> Reviews the components of the working environment of the report. Non-technical readers are welcomed to skip. Come back if you need to understand the origins of custom functions, scripts, or data objects.

```{r}
#| label: load-packages
#| code-summary: Packages used in the current report
#| echo: true
#| results: hide
#| message: false
#| code-fold: true
#| # Choose to be greedy: load only what's needed
# Three ways, from least (1) to most(3) greedy:
# -- 1.Attach these packages so their functions don't need to be qualified: http://r-pkgs.had.co.nz/namespace.html#search-path
library(ggplot2)   # graphs
library(forcats)   # factors
library(stringr)   # strings
library(lubridate) # dates
library(labelled)  # labels
library(scales)    # format
library(dplyr)     # loading dplyr explicitly is my guilty pleasure
library(broom)     # for model
library(emmeans)   # for interpreting model results
library(magrittr)
# -- 2.Import only certain functions of a package into the search path.
import::from("magrittr", "%>%")
# -- 3. Verify these packages are available on the machine, but their functions need to be qualified: http://r-pkgs.had.co.nz/namespace.html#search-path
requireNamespace("readr"    )# data import/export
requireNamespace("readxl"   )# data import/export
requireNamespace("tidyr"    )# tidy data
requireNamespace("janitor"  )# tidy data
requireNamespace("dplyr"    )# Avoid attaching dplyr, b/c its function names conflict with a lot of packages (esp base, stats, and plyr).
requireNamespace("testit"   )# For asserting conditions meet expected patterns.
```

```{r}
#| label: load-sources
#| code-summary: Collection of custom functions used in current repository 
#| echo: true
#| results: hide
#| message: false
#| code-fold: true

base::source("../../scripts/common-functions.R")
```

```{r}
#| label: declare-globals
#| code-summary: Values used throughout the report.
#| echo: true
#| results: hide
#| message: false 
#| code-fold: true

# visual style applied to all graphs
baseSize <- 10
ggplot2::theme_set(
  ggplot2::theme_bw(
  )+
    theme(
      strip.background = element_rect(fill="grey95", color = NA)
      ,panel.grid = element_line(color = "grey95")
      ,panel.border = element_rect(color = "grey80")
      ,axis.ticks = element_blank()
      ,text=element_text(size=baseSize)
    )
)

# corporate colors
abcol <- c(
  "stone"     = "#5f6a72" # stone   - grey
  ,"dusk"     = "#d40072" # dusk    - magenta
  ,"sunset"   = "#ff7900" # sunset  - brown
  ,"pasture"  = "#77b800" # pasture - green
  ,"sky"      = "#00aad2" # sky     - blue
  ,"prairie"  = "#edb700" # prairie - yellow
)

(prints_folder <- paste0("./prints/")) # local
if (!fs::dir_exists(prints_folder)) { fs::dir_create(prints_folder) }

```

```{r}
#| label: declare-functions
#| code-summary: Custom functions defined for use in this report.
#| echo: true
#| results: hide
#| message: false 
#| code-fold: true

# placeholder
```

# Data

Let us assume that a rectangle `ds0` represents a set of survey responses for a given period of time.

```{r}
#| warning=F
nia_null0 <- readr::read_csv("8-model-B/model-solution/nia-effects-null.csv")
nia_full0 <- readr::read_csv("8-model-B/model-solution/nia-effects-full.csv")

```

```{r}
nia_null_shift <- 
  nia_null0 %>% 
  # filter(
  #   intervention %in% c("career_planning","job_placement")
  #   ,waveL %in% c(0,1,2)
  # ) %>% 
  group_by(intervention) %>% 
  mutate(
    before_false_value = y_hat[which(waveF == "Before" & tx == FALSE)]
    ,before_true_value = y_hat[which(waveF == "Before" & tx == TRUE)]
    ,nia_shift =  before_true_value -before_false_value # how much TRUE is higher than FALSE
    # ,
  ) %>% 
  ungroup() %>% 
  filter(tx == TRUE) %>% 
  mutate(
    y_hat = y_hat - nia_shift
    ,ci_lower = ci_lower - nia_shift
    ,ci_upper = ci_upper - nia_shift
    ,shifted = TRUE
  )  %>% 
  select(-c("before_false_value","before_true_value","nia_shift"))

nia_null <- 
  nia_null0 %>% 
  mutate(
    shifted = FALSE
  ) %>% 
  bind_rows(nia_null_shift) %>% 
  mutate(
    y_hat = y_hat/1000
    ,ci_lower = ci_lower/1000
    ,ci_upper = ci_upper/1000
    ,se = se/1000
    ,tx = case_when(
      shifted == TRUE ~ "NET"
      ,TRUE ~ as.character(tx)
    )
    ,ci_lower = case_when(
      tx == "NET" ~ NA,
      TRUE ~ ci_lower
    )
    ,ci_upper = case_when(
      tx == "NET" ~ NA,
      TRUE ~ ci_upper
    )
    ,y_hat_label = case_when(
      tx == "NET"  & waveL == 0L ~ NA,
      TRUE ~ y_hat
    )
  ) %>% 
  group_by(intervention, waveL) %>% 
  arrange(intervention, waveL, tx) %>% 
  mutate(
    y_hat_net = y_hat[which(tx=="NET")] - y_hat[which(tx=="FALSE")] 
    # ,y_hat_net_y_position = min(y_hat[which(tx== "FALSE")],y_hat[which(tx == "TRUE")]) + (y_hat_net/2)
    ,y_hat_net_y_position = min(y_hat,na.rm = T) + abs((y_hat_net/2))
  ) %>% 
  ungroup() %>% 
  mutate( 
    # y_hat_net = case_when(is.na(y_hat_label) ~ NA, TRUE ~ y_hat_net)
    y_hat_net = case_when(waveL==0L ~ NA, TRUE ~ y_hat_net)
    ,intervention_display = intervention %>% stringr::str_replace_all("_"," ") %>%  stringr::str_to_title()
  )   


# verify
nia_null %>% 
  # filter(waveL < 3) %>% 
  filter(waveL < 3) %>% 
  # filter(intervention == "career_planning")
  filter(intervention == "labour_market_info")
 
  
```


What's inside this *analysis rectangle*?

```{r}
# Null model
# Balancing equation: outcome ~ covariates + (interventions - focal_intervention)
# Effect model:       outcome ~ intervention
# EM means formula:   outcome ~ tx * wave
nia_null

# Full model 
# Balancing equation: outcome ~ covariates + (interventions - focal_intervention)
# Effect model:       outcome ~ covariates + (interventions - focal_intervention)
# EM means formula :   outcome ~ tx * wave * sex2 * age_in_years * dependent2 * marital2
# EM means reference levels:
# tx                  = c(FALSE, TRUE)
# waveL               = c(0,1)
# sex2                = c("Men", "Women")
# age_in_years        = c(20, 30, 40, 50, 60)
# dependent2          = c("0 dependents", "1+ dependents")
# marital3            = c("married", "single")
# education4          = c("High School")
# disability2         = c("No Disability")
# ethnicity           = c("Caucasian")
# immigration         = c("born in Canada")
# region7             = c("Edmonton")
# spell_duration_cat  = c("2-3 months")
# years_btw_waves_cat = c("2")
# fy_is_start         = c("2017")
# career_planning     = c(0)
# job_placement       = c(0)
# exposure_course     = c(0)
# workshop_noncp      = c(0)
# english_as_second   = c(0)
# training_for_work   = c(0)
# work_foundation     = c(0)
# assessment_snd      = c(0)
# assessment_ea       = c(0)
nia_full0
```

# Analysis

Important Caveats

1. We operationalize "receiving intervention" as having at least one target program event within 1 year prior to the start of the Income Support spell or before its end. 

2. We entered other intervention into the effect estimation model and fixed the levels to `0` when estimating marginal means. This means that model predictions isolate the influence of the target intervention from the rest.   

3. Four demographic variables (`sex2`, `marital2`, `dependent2`, and `age_in_years`) are used to calculate the predicted values for specific levels of interest. The levels of other predictors (`education4`,`disability2`, `ethnicity`,`immigration`, `region7`, `spell_duration_cat`,`years_between_waves_cat`, and `fy_is_start`) are fixed at the level derived from a empirical center (most commonly occurring combination of levels on all covariates)

4. The Full model is double-robust: we use the same set of predictors in the group balancing model, as in the effect estimation model


## Main Effect - Null Model
```{r}
font_size_regular <- baseSize - 7
font_size_net     <- baseSize - 4
g1 <- 
  nia_null %>% 
  filter(waveL < 3) %>%
  # here, because otherwise uses all waves 
  group_by(intervention) %>% 
  mutate(
      outcome_n_y_position = max(ci_upper,na.rm=T) + .4
      ,outcome_n_y_position = case_when(
        tx == "TRUE" ~ outcome_n_y_position + .9
        ,TRUE ~ outcome_n_y_position
      )
  ) %>%
  ungroup() %>% 
  # filter(intervention == "career_planning") %>%
  # filter(intervention == "labour_market_info") %>%
  ggplot(aes(x=waveL, y = y_hat, color = tx))+
  geom_point()+
  # geom_rect()
  # geom_pointrange(aes(ymin=ci_lower, ymax=ci_upper))+
  geom_linerange(aes(ymin=ci_lower, ymax=ci_upper),linewidth =2, alpha = .3)+
  geom_line()+
  # geom_ribbon()
  ggrepel::geom_text_repel(aes(label = scales::comma(y_hat_label, accuracy = .1)), size = font_size_regular)+
  facet_wrap("intervention_display", scales = "free_y")+
  
  # geom_text(aes(label = scales::comma(y_hat_net,accuracy = .1), y=y_hat_net_y_position, alpha = abs(y_hat_net)), size =baseSize-2, color = "black")+
  geom_text(aes(label = scales::comma(y_hat_net,accuracy = .1), y=y_hat_net_y_position), size =baseSize-2, color = "black", alpha = .15)+
  geom_text(aes(label = scales::comma(outcome_n), y = outcome_n_y_position),data = . %>% filter(tx!="NET") )+
  scale_color_manual(values = c("TRUE"=abcol[["sunset"]], "FALSE"=abcol[["sky"]], "NET" = "grey30"))+
  scale_x_continuous(breaks = c(0:6), minor_breaks = c(0:6), expand = expansion(add = c(.4,.4)))+
  scale_y_continuous(expand = expansion(add = c(0,1)), breaks = seq(0,100,5))+
  labs(
    title = "Main effect of the intervention on the reported Total Earnings"
    ,subtitle = "Balanced on all known covariates and other interventions"
    ,y = "Total Earnings (thousandds)"
    ,x = "Year relative to the first spell of Income Support \n 0 - before starting | 1 - one year after leaving | 2 - two years after leaving"
    ,color = "Intervention\npresent"
    # ,caption = "Wave = 0 - year before starting IS | Wave = 1 - year after exiting IS"
  ) +
  theme(
    legend.position = c(.85,.15)
  )
g1 %>% print()
g1 %>% quick_save("main-effect-5-waves",w=16,h=9)
```


## SCSS Only

```{r}
font_size_regular <- baseSize - 7
font_size_net     <- baseSize - 4
g1 <- 
  nia_null %>% 
  filter(waveL < 6) %>%
  filter(!intervention %in% c("work_foundations","training_for_work")) %>%
  # filter(intervention %in% c("career_planning","job_placement","exposure_course")) %>% 
  # here, because otherwise uses all waves 
  group_by(intervention) %>% 
  mutate(
      outcome_n_y_position = max(ci_upper,na.rm=T) + .4
      ,outcome_n_y_position = case_when(
        tx == "TRUE" ~ outcome_n_y_position + .9
        ,TRUE ~ outcome_n_y_position
      )   
      ,txF = factor(tx,
                    levels = c("TRUE","NET","FALSE")
                    ,labels = c("Intervention", "Intervention\nadjusted for\ninitial difference","Control")
                    )
      
  ) %>%
  ungroup() %>% 
  # filter(intervention == "career_planning") %>%
  # filter(intervention == "labour_market_info") %>%
  ggplot(aes(x=waveL, y = y_hat, color = txF))+
  geom_point(aes(shape=txF),  size = 2.5)+
  # geom_point(data = . %>% filter(tx!="NET"))+
  # geom_rect()
  # geom_pointrange(aes(ymin=ci_lower, ymax=ci_upper))+
  geom_line(data=. %>% filter(tx=="NET"), size=3, alpha=0)+
  geom_line(data=. %>% filter(tx=="NET"),size=.3, alpha=.5)+
  geom_linerange(aes(ymin=ci_lower, ymax=ci_upper),linewidth =2, alpha = .3)+
  geom_line(data=. %>% filter(txF=="Intervention"), size=3, alpha=.1)+
  geom_line(data=. %>% filter(txF=="Intervention"))+
  geom_line(data=. %>% filter(txF=="Control"), size=3, alpha=.1)+
  geom_line(data=. %>% filter(txF=="Control"))+
  # geom_ribbon()
  ggrepel::geom_text_repel(aes(label = scales::comma(y_hat_label, accuracy = .1)), size = font_size_regular,show.legend = FALSE)+
  # geom_ribbon()
  facet_wrap("intervention_display", scales = "free_y")+
    geom_text(aes(label = scales::comma(y_hat_net,accuracy = .1), y=y_hat_net_y_position), size =baseSize-2, color = "black", alpha = .1)+
  geom_text(aes(label = scales::comma(outcome_n), y = outcome_n_y_position),data = . %>% filter(tx!="NET") ,show.legend = FALSE, alpha = .3)+
  scale_color_manual(values = c("Intervention"=abcol[["sunset"]], "Control"=abcol[["sky"]],"Intervention\nadjusted for\ninitial difference"=abcol[["stone"]]))+
  scale_shape_manual(values = c("Intervention\nadjusted for\ninitial difference"=21, "Intervention"=16, "Control"=19))+
  scale_x_continuous(breaks = c(0:6), minor_breaks = c(0:6), expand = expansion(add = c(.4,.4)))+
  scale_y_continuous(expand = expansion(add = c(0,1)), breaks = seq(0,100,5))+
  labs(
    title = "Main effect of the intervention on the reported Total Earnings"
    ,subtitle = "Balanced on and controlling for all known covariates and other interventions. Estimated NET IMPACT of the intervention (in thousand dollars, adjusted for inflation at 2022) shown in large grey digits"
    ,y = "Total Earnings \n(thousands dollars, adjusted for 2022)"
    ,x = "Year relative to the first spell of Income Support \n 0 - before starting | 1 - one year after leaving | 2 - two years after leaving | etc"
    ,color = "Comparison\ngroup"
    ,shape = "Comparison\ngroup"
    ,fill = "Comparison\ngroup"
    # ,caption = "Wave = 0 - year before starting IS | Wave = 1 - year after exiting IS"
  ) +
     theme(strip.text.x = element_text(size = 15))+
    # guides(alpha = "none")
 guides(shape = guide_legend(override.aes = list(size = 3)))
# g1 %>% print()
# g1 %>% quick_save("main-effect-5-waves-main-3",w=16,h=4)
g1 %>% quick_save("main-effect-5-waves-all",w=16,h=10)
```

## Zoom

```{r}
font_size_regular <- baseSize - 7
font_size_net     <- baseSize - 4
target_tx <- "career_planning"
# target_tx <- "cover_letters"
# target_tx <- "exposure_course"
# target_tx <- "interview_skills"
# target_tx <- "job_placement"
# target_tx <- "job_search"
# target_tx <- "labour_market_info"
# target_tx <- "resume_writing"
# target_tx <- "self_assessment"
g2 <- 
  nia_null %>% 
  filter(waveL < 6) %>%
  # filter(!intervention %in% c("work_foundations","training_for_work")) %>% 
  # filter(intervention %in% c("career_planning","job_placement","exposure_course")) %>% 
    filter(intervention %in% c(target_tx)) %>%
  # here, because otherwise uses all waves 
  group_by(intervention) %>% 
  mutate(
      outcome_n_y_position = max(ci_upper,na.rm=T) + .4
      ,outcome_n_y_position = case_when(
        tx == "TRUE" ~ outcome_n_y_position + .9
        ,TRUE ~ outcome_n_y_position
      )   
      ,txF = factor(tx,
                    levels = c("TRUE","NET","FALSE")
                    ,labels = c("Intervention", "Intervention\nadjusted for\ninitial difference","Control")
                    )
      
  ) %>%
  ungroup() %>% 
  # filter(intervention == "career_planning") %>%
  # filter(intervention == "labour_market_info") %>%
  ggplot(aes(x=waveL, y = y_hat, color = txF))+
  geom_point(aes(shape=txF), size = 3)+
  # geom_point(data = . %>% filter(tx!="NET"))+
  # geom_rect()
  # geom_pointrange(aes(ymin=ci_lower, ymax=ci_upper))+
  geom_line(data=. %>% filter(tx=="NET"), size=3, alpha=0)+
  geom_line(data=. %>% filter(tx=="NET"),size=.3, alpha=.5)+
  geom_linerange(aes(ymin=ci_lower, ymax=ci_upper),linewidth =2, alpha = .3)+
  geom_line(data=. %>% filter(txF=="Intervention"), size=3, alpha=.1)+
  geom_line(data=. %>% filter(txF=="Intervention"))+
  geom_line(data=. %>% filter(txF=="Control"), size=3, alpha=.1)+
  geom_line(data=. %>% filter(txF=="Control"))+
  # geom_ribbon()
  ggrepel::geom_text_repel(aes(label = scales::comma(y_hat_label, accuracy = .1)), size = font_size_regular,show.legend = FALSE)+
  # geom_ribbon()
  facet_wrap("intervention_display", scales = "free_y")+
    geom_text(aes(label = scales::comma(y_hat_net,accuracy = .1), y=y_hat_net_y_position), size =baseSize-2, color = "black", alpha = .1)+
  # geom_text(aes(label = scales::comma(outcome_n), y = outcome_n_y_position),data = . %>% filter(tx!="NET") ,show.legend = FALSE, alpha = .3)+
  scale_color_manual(values = c("Intervention"=abcol[["sunset"]], "Control"=abcol[["sky"]],"Intervention\nadjusted for\ninitial difference"=abcol[["stone"]]))+
  scale_shape_manual(values = c("Intervention\nadjusted for\ninitial difference"=21, "Intervention"=16, "Control"=19))+
  scale_x_continuous(breaks = c(0:6), minor_breaks = c(0:6), expand = expansion(add = c(.4,.4)))+
  scale_y_continuous(expand = expansion(add = c(0,1)), breaks = seq(0,100,5))+
  labs(
    title = "Main effect of the intervention on the reported Total Earnings"
    ,subtitle = "Balanced on and controlling for all known covariates and other interventions\nEstimated NET IMPACT of the intervention shown in large grey digits"
    ,y = "Total Earnings \n(thousands dollars, adjusted for 2022)"
    ,x = "Year relative to the first spell of Income Support \n 0 - before starting | 1 - one year after leaving | 2 - two years after leaving | etc"
    ,color = "Comparison\ngroup"
    ,shape = "Comparison\ngroup"
    ,fill = "Comparison\ngroup"
    # ,caption = "Wave = 0 - year before starting IS | Wave = 1 - year after exiting IS"
  ) +
     theme(strip.text.x = element_text(size = 15))+
    # guides(alpha = "none")
 guides(shape = guide_legend(override.aes = list(size = 3)))
# g1 %>% print()
file_name <- paste0("zoom-main-effect-5-",target_tx)
g2 %>% quick_save(file_name,w=8,h=5)
```






## Net Summary

```{r}
# demonstration of treatment effect for the reference group

nia_null %>% 
  # filter(waveL < 3) %>% 
  filter(waveL < 3) %>% 
  # filter(intervention == "career_planning")
  filter(intervention == "labour_market_info")
 
  
dg1 <- 
  nia_null %>% 
  filter(waveL < 3) %>% 
  filter(intervention == "career_planning")
  # filter(intervention == "labour_market_info") %>%
  

dg1 <- 
  ds %>% 
  filter(var_name %in% c("tx")) %>% 
  mutate(
    impact_direction = case_when(
      estimate >0L ~ "positive",
      estimate <=0L ~ "negative"
    )
    ,sign_at_05 = p_value <= .05
  ) 
dg1

g1 <- 
  dg1 %>% 
  ggplot(aes(y =intervention, shape = value_level_display))+
  # Reference
  geom_point(
    aes(x = intercept)
    ,data = . %>% filter(value_level == FALSE)
    # ,shape = 21
  )+
  # Intervention
  geom_point(
    aes(x=estimate+intercept, fill = sign_at_05)
    # ,data = . %>% filter(value_level == TRUE)
    ,data = . %>% filter(value_level_display == "Yes Intervention")
    ,shape = 21
    ,size = 2
  )+
  geom_segment(
    aes(x=intercept+estimate, xend = intercept, yend = intervention)
  )+
  geom_text(aes(label = scales::comma(estimate,1) ,x=intercept+estimate, color = impact_direction, alpha = sign_at_05)
            ,size = 4, nudge_y = .2)+
  # geom_text(aes(label = scales::comma(intercept,1),x=intercept), data = . %>% filter(value_level=="FALSE")
  geom_text(aes(label = scales::comma(intercept,1),x=intercept), data = . %>% filter(value_level_display=="No Intervention")
            ,size = 2.5, alpha = .5, color = "grey40",nudge_y=-.15)+
  facet_wrap(facets = "outcome", nrow=1)
g1
g2 <- 
  g1 + 
  scale_color_manual(values = c("positive" = "blue", "negative" = "red"))+
  scale_fill_manual(values = c("TRUE" = "black", "FALSE" = "white"))+
  # scale_shape_manual(values = c("TRUE"=21, "FALSE"=124))+
  scale_shape_manual(values = c("Yes Intervention"=21, "No Intervention"=124))+
  scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = .2))+
  scale_x_continuous(
    breaks = seq(10000,30000,5000)
    ,labels = scales::comma_format()
    # ,limits = c(14000,26000)
    ,expand =  expansion(mult = c(0.2,0.2))
  )+
  guides(alpha = F)+
  labs(
    shape = ""
    ,color = "Direction of impact"
    ,fill = "Significant at .05"
    ,x = "Change in the amount reported to CRA, in 2022 dollars"
    ,title = "Net impact of intervention in the year after the first Income Support spell"
    # ,subtitle  = ""
  )
g2
dg1
g2 %>% quick_save("1",w=11,h=5)
```




## Marginal Means - Full Model

```{r}
intervention_i <- "career_planning"
marital_i      <- "single"
sex_i          <- "Men"
dependent_i    <- "0"
age_i          <- "20"
intervention_i_pretty <- snakecase::to_title_case(intervention_i)

nia_full %>% 
  filter(intervention == intervention_i) %>% 
  filter(age_in_years==age_i) %>% 
  filter(marital2 == marital_i) %>% 
  mutate(y_hat = y_hat/1000) %>% # for  more convenient metric
  {
    ggplot(data=., aes(x=waveL, y= y_hat, color = tx, linetype = tx))+
    geom_point()+
    # geom_line(key_glyph = draw_key_rect)+
    geom_line(key_glyph = draw_key_rect)+
    # see more at: https://ggplot2.tidyverse.org/reference/draw_key.html
    ggrepel::geom_text_repel(aes(label = scales::comma(y_hat, accuracy = .1)))+
    scale_y_continuous(breaks = seq(10,30,5), labels = scales::comma_format())+
    scale_x_continuous(breaks = c(0,1), minor_breaks = c(0,1))+
    facet_wrap(c("sex2","dependent2"))+
    scale_color_manual(values = c("TRUE"="blue","FALSE"="grey50"))+
    scale_linetype_manual(values = c("TRUE"="solid","FALSE"="dashed"))+
    guides(
      colour = guide_legend(override.aes = list(alpha = 1))
      ,linetype = "none"
  )+
  theme(
    panel.grid.major.x = element_blank()
  )+
  labs(
      title = paste0("Estimated effect of ", intervention_i_pretty, " on Total Earnings (in thousands)")
      ,subtitle = paste0(
        "Marital status: ", marital_i, " | Age: ", age_i,"\n\n", # will change with specs
        "High School | Cacausian | Born in Canada | Edmonton | No disability | IS = 2-3 months | FY start = 2017" # won't change with specs
      )
      ,y = intervention_i_pretty
      ,color = paste0("Had at least one\n",intervention_i_pretty,"\nbefore end of spell")
      ,x = "Timing before (0) or after (1) Income Support spell"
    )  
  }
  
  
```
